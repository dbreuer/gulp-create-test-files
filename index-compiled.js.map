{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Created by dbreuer83 on 13/11/15.\n */\n'use strict';\n\nvar through = require('through2');\nvar _ = require('lodash');\nvar gutil = require('gulp-util');\nvar fs = require(\"fs\");\nvar testHelper = require(\"./src/helper.js\");\n\nvar PluginError = gutil.PluginError;\n// Consts\nvar PLUGIN_NAME = 'gulp-create-test-files';\n\nfunction gulpTests() {}\n\n\n\ngulpTests.prototype.init = function(opts) {\n\n\n\n    var testObject = {};\n\n      if (typeof opts === undefined) {\n        opts = {};\n      }\n      opts = {\n        src: __dirname + 'app/',\n        dist: __dirname + '/tests',\n        temp: 'templates/',\n        testFileSuffix: '.spec.js',\n        projectPrefix: 'project'\n      };\n        return through.obj(function (file, enc, cb) {\n\n            //options.testFileSuffix = new Buffer(options.testFileSuffix);\n\n\n            if (file.isNull()) {\n                return cb(null, file);\n            }\n            if (file.isStream()) {\n                this.emit('error', new PluginError(PLUGIN_NAME, 'Streams are not supported!'));\n                return cb();\n            }\n            if (file.isBuffer()) {\n\n\n                if (!testHelper.isAngular(file)) {\n                    console.log('Skipped:', 'not angular file', \"File not created\");\n                    return cb();\n                }\n\n                if (testHelper.hasTest(file)) {\n                    console.log('Skipped:', 'has test file', \"File not created\");\n                    return cb();\n                }\n\n                console.log(file.path);\n\n\n\n                // Comments match regexp\n                // patternForComments= /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg\n                /**\n                 * module type regex\n                 * @type {RegExp}\n                 */\n                \n                \n                var match = testHelper.getAllProviders(file.contents);\n                var matchFunctions = testHelper.getAllFunctions(file.contents);\n                var matchServices;\n\n\n                var opt = {\n                    date: new Date(),\n                    type: null,\n                    typeName: null,\n                    module: opts.projectPrefix + '.' + testHelper.truncateJsSuffix(_(file.path.split('/')).last()),\n                    dependency: null,\n                    directiveName: null,\n                    path: file.path,\n                    filename: _(file.path.split('/')).last(),\n                    amdPath: 'namm',\n                    name: testHelper.truncateJsSuffix(_(file.path.split('/')).last()),\n                    capitalizedName: testHelper.capitalize(testHelper.truncateJsSuffix(_(file.path.split('/')).last()))\n                };\n                console.log(match[0]);\n                if (match) {\n                    opt.type = match[1];\n                    opt.typeName = match[2];\n                    matchServices = testHelper.getAllServices();\n                }\n\n\n                if (opt.type === 'directive') {\n                    opt.directiveName = testHelper.dasherize(opt.typeName);\n                }\n\n                if (matchFunctions !== null) {\n                    opt.funcObj = matchFunctions;\n                }\n\n                if (opt.type === 'service'||'factory') {\n                    opt.services = matchServices;\n                }\n\n                opt.caches = testHelper.getAllCache(file.contents);\n                /**\n                 *\n                 * @type {{functions: *}}\n                 */\n                testObject = {\n                    module: testHelper.getAllModules(file.contents),\n                    dependency: testHelper.getAllModuleDependency(file.contents),\n                    providers: testHelper.getAllProviders(file.contents),\n                    functions: testHelper.getAllFunctions(file.contents),\n                    cache: testHelper.getAllCache(file.contents),\n                    services: testHelper.getAllServices(file.contents)\n                };\n\n                fs.writeFile('message.json', JSON.stringify(testObject), 'utf8', function(response){\n                    console.log(\"Test file: \", response)\n                });\n                var templateFile = (opt.type === void 0) ? 'angular.' + opt.type + '.temp' : 'angular.module.temp';\n                var fileContent = String(fs.readFileSync(__dirname + \"/templates/\" + templateFile, \"utf8\"));\n\n                var compiled = _.template(fileContent);\n\n                file.contents = new Buffer(compiled(opt));\n\n                file.path = testHelper.replaceExtension(file.path, '.spec.js'); // file.js\n                console.log('Created test files: ', _(file.path.split('/')).last());\n            }\n\n\n                cb(null, file);\n                //cb(null);\n\n\n\n\n        });\n\n\n\n\n\n};\n\n\n\nmodule.exports = new gulpTests();\n"]}