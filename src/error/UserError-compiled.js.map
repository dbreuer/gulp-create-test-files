{"version":3,"sources":["UserError.js"],"names":[],"mappings":";;;;;;;;;AASA,YAAY;;;;;AAAC,AAKb,SAAS,SAAS,CAAC,WAAW,EAAE,aAAa,EAAE;;AAE3C,eAAa,GAAG,aAAa,IAAI,EAAE,CAAC;;AAEpC,MAAI,CAAC,IAAI,GAAG,WAAW,CAAC;AACxB,MAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,MAAI,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,IAAI,WAAW,CAAC;AACpD,MAAI,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;CACpC;;AAED,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACrD,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC;;AAE5C,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"UserError-compiled.js","sourcesContent":["//UserError.js\n/**\n * Created by David Breuer on 15/12/15.\n *\n * @file UserError.js\n * @description\n *\n */\n\n'use strict';\n\n// Use this type of error to display custom error message in a nice way\n// It is processed in cli.js in 'uncaughtException' listener\n\nfunction UserError(userMessage, originalError) {\n    // you can pass original error object, if re-throwing to keep it's info\n    originalError = originalError || {};\n\n    this.name = 'UserError';\n    this.userMessage = userMessage;\n    this.message = originalError.message || userMessage;\n    this.stack = originalError.stack;\n}\n\nUserError.prototype = Object.create(Error.prototype);\nUserError.prototype.constructor = UserError;\n\nmodule.exports = UserError;"]}