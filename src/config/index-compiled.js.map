{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;AAQA,YAAY,CAAC;;AAEb,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,IAAI,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAChC,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAChC,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAI,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;;AAE9C,IAAI,aAAa,GAAG,OAAO,CAAC,WAAW,CAAC;;;;AAAC,AAIzC,IAAI,cAAc,GAAG,EAAE;;;AAAC,AAGxB,IAAI,MAAM,GAAG;AACT,OAAG,EAAE,SAAS,GAAG,CAAC,OAAO,EAAE;AACvB,SAAC,CAAC,KAAK,CAAC,cAAc,EAAE,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;;AAE7C,gBAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;AAC9B,uBAAO,CAAC,CAAC;aACZ;SACJ,CAAC,CAAC;KACN;CACJ;;;AAAC,AAGF,aAAa,CAAC,MAAM,CAAC,CAAC;;AAEtB,IAAI,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC3C,IAAI,aAAa,EAAE;;AAEf,QAAI,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC;;AAEvB,QAAI;;AAEA,iBAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;KACtC,CAAC,OAAO,GAAG,EAAE;AACV,YAAI,GAAG,CAAC,IAAI,KAAK,kBAAkB,EAAE;AACjC,eAAG,CAAC,IAAI,CAAC,iEAAiE,CAAC,CAAC;AAC5E,iBAAK,CAAC,MAAM,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC;SACxC;KACJ;;;AAAA,AAGD,aAAS,CAAC,MAAM,CAAC,CAAC;CACrB;;AAED,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE;AACtC,UAAM,IAAI,SAAS,CAAC,iDAAiD,CAAC,CAAC;CAC1E;;AAED,MAAM,CAAC,OAAO,GAAG,cAAc;;;AAAC","file":"index-compiled.js","sourcesContent":["//index.js\n/**\n * Created by David Breuer on 15/12/15.\n *\n * @file index.js\n * @description\n *\n */\n'use strict';\n\nvar _ = require('lodash');\n\nvar C = require('../constants');\nvar cache = require('../cache');\nvar log = require('../log');\nvar UserError = require('../error/UserError');\n\nvar defaultConfig = require('./default');\n\n////////\n\nvar resolvedConfig = {};\n\n// create API for config module\nvar config = {\n    set: function set(options) {\n        _.merge(resolvedConfig, options, function (a, b) {\n            // do not merge arrays, but replace\n            if (_.isArray(a) && _.isArray(b)) {\n                return b;\n            }\n        });\n    }\n};\n\n// call config module function providing config API\ndefaultConfig(config);\n\nvar useConfigPath = cache.get('useConfig');\nif (useConfigPath) {\n\n    var useConfig = _.noop;\n\n    try {\n        // load custom config as module\n        useConfig = require(useConfigPath);\n    } catch (err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            log.pref('Could not load cached config path. Switching to default config.');\n            cache.remove(C.CACHE_USE_CONFIG_KEY);\n        }\n    }\n\n    // call user config module function providing config API\n    useConfig(config);\n}\n\nif (!resolvedConfig.units.process.length) {\n    throw new UserError('Config option \"units.process\" can not be empty.');\n}\n\nmodule.exports = resolvedConfig;\n\n//# sourceMappingURL=index-compiled.js.map"]}