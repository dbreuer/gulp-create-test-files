{"version":3,"sources":["default.js"],"names":[],"mappings":"AAAA,YAAY;;;;;;;;;;AAAC;AAUb,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AAC/B,UAAM,CAAC,GAAG,CAAC;;AAEP,gBAAQ,EAAE;;;;AAIN,kBAAM,EAAE,IAAI;;;AAGZ,qBAAS,EAAE,IAAI;;;AAGf,0BAAc,EAAE,IAAI;SACvB;;AAED,aAAK,EAAE;;;;;AAKH,mBAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;;SAExG;;AAED,oBAAY,EAAE;;;;;AAKV,mBAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;;;;AAIhE,kBAAM,EAAE,CAAC,QAAQ,CAAC;;;;AAIlB,uBAAW,EAAE;AACT,yBAAS,EAAE,SAAS;AACpB,yBAAS,EAAE,SAAS;AACpB,0BAAU,EAAE,UAAU;AACtB,uBAAO,EAAE,OAAO;AAChB,0BAAU,EAAE,UAAU;aACzB;;SAEJ;;KAEJ,CAAC,CAAC;CACN;;;AAAC","file":"default-compiled.js","sourcesContent":["'use strict';\n\n//default.js\n/**\n * Created by David Breuer on 15/12/15.\n *\n * @file default.js\n * @description\n *\n */\nmodule.exports = function (config) {\n    config.set({\n\n        template: {\n            // By default templates use tab for indentation\n            // You can pass any string and each tab will be replaced with that string.\n            // You can pass integer and it will be a number of spaces for indentation.\n            indent: '\\t',\n\n            // Include \"use strict\" statement to the top of the generated test file\n            useStrict: true,\n\n            // Add commented examples of basic specs to the generated test file\n            includeSamples: true\n        },\n\n        units: {\n\n            // List the unit types which should be processed. Only the types mentioned\n            // here will be parsed and asked about.\n            // The order they appear can be changed by reordering these keys.\n            process: ['controller', 'directive', 'factory', 'service', 'filter', 'provider', 'value', 'constant']\n\n        },\n\n        dependencies: {\n\n            // List the dependencies which should be processed. Only the\n            // types mentioned here will be included in generated test code.\n            // The order they appear can be changed by reordering these keys.\n            process: ['factory', 'service', 'provider', 'value', 'constant'],\n\n            // Exclude particular dependencies, there won't be any test code generated\n            // for them.\n            filter: ['$scope'],\n\n            // Map dependency type to a respective template. Can be helpful in case\n            // when one wants to stub services and factories with values.\n            templateMap: {\n                'factory': 'factory',\n                'service': 'service',\n                'provider': 'provider',\n                'value': 'value',\n                'constant': 'constant'\n            }\n\n        }\n\n    });\n};\n\n//# sourceMappingURL=default-compiled.js.map"]}