{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;AAQA,YAAY,CAAC;;AAEb,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACvC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEtC,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;;;;AAAC,AAInC,MAAM,CAAC,OAAO,GAAG,MAAM;;;;AAAC,AAIxB,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;AAC1B,QAAI,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;;AAE9B,oBAAgB,CAAC,GAAG,CAAC,CAAC;AACtB,mBAAe,CAAC,GAAG,CAAC,CAAC;;AAErB,QAAI,gBAAgB,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE;AACvC,gBAAQ,EAAE,IAAI;KACjB,CAAC,CAAC;;AAEH,QAAI,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;;AAEpC,QAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AACpC,QAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACpB,cAAM,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KAClC;;AAED,QAAI,MAAM,KAAK,IAAI,EAAE;AACjB,cAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAC1C;;AAED,WAAO,MAAM,CAAC;CACjB;;;;AAAA,AAID,SAAS,eAAe,CAAC,GAAG,EAAE;AAC1B,KAAC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE;AACnC,WAAG,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KAChC,CAAC,CAAC;CACN;;AAED,SAAS,gBAAgB,CAAC,GAAG,EAAE;AAC3B,QAAI,QAAQ,GAAG,EAAE,CAAC;;AAElB,KAAC,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE;AACnD,YAAI,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACvC,gBAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;KAC3B,CAAC,CAAC;;AAEH,KAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,MAAM,EAAE,IAAI,EAAE;AACxC,WAAG,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACrC,CAAC,CAAC;CACN","file":"index-compiled.js","sourcesContent":["//index.js\n/**\n * Created by David Breuer on 15/12/15.\n *\n * @file index.js\n * @description\n *\n */\n'use strict';\n\nvar handlebars = require('handlebars');\nvar _ = require('lodash');\n\nvar config = require('../config');\nvar template = require('../template');\n\nvar helpers = require('./helpers');\n\n////////\n\nmodule.exports = render;\n\n////////\n\nfunction render(source, data) {\n    var env = handlebars.create();\n\n    registerPartials(env);\n    registerHelpers(env);\n\n    var compiledTemplate = env.compile(source, {\n        noEscape: true\n    });\n\n    var result = compiledTemplate(data);\n\n    var indent = config.template.indent;\n    if (_.isNumber(indent)) {\n        indent = _.repeat(' ', indent);\n    }\n\n    if (indent !== '\\t') {\n        result = result.replace(/\\t/g, indent);\n    }\n\n    return result;\n}\n\n////////\n\nfunction registerHelpers(env) {\n    _.forEach(helpers, function (fn, name) {\n        env.registerHelper(name, fn);\n    });\n}\n\nfunction registerPartials(env) {\n    var partials = {};\n\n    _.forEach(config.dependencies.process, function (name) {\n        var source = template.dependency(name);\n        partials[name] = source;\n    });\n\n    _.forEach(partials, function (source, name) {\n        env.registerPartial(name, source);\n    });\n}\n"]}