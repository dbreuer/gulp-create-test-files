{"version":3,"sources":["cli.js"],"names":[],"mappings":";;;;;;;;AAQA,YAAY,CAAC;;AAEb,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,IAAI,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/B,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC3B,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC3B,IAAI,SAAS,GAAG,OAAO,CAAC,mBAAmB,CAAC;;;;;;;AAAC,AAO7C,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAU,GAAG,EAAE;AAC3C,QAAI,GAAG,YAAY,SAAS,EAAE;AAC1B,WAAG,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;KAC7B,MAAM;AACH,eAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAC5B;AACD,QAAI,GAAG,CAAC,KAAK,EAAE;AACX,eAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC1B;CACJ,CAAC;;;;;AAAC,AAKH,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;AACvB,UAAM,IAAI,SAAS,CAAC,8DAA8D,CAAC,CAAC;CACvF;;;;AAAA,AAID,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEtB,QAAQ,OAAO;;AAEX,SAAK,QAAQ;AACT,gBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,8BAA8B,EAAE,QAAQ,CAAC,CAAC;AAC5D,WAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,cAAM;;AAAA,AAEV,SAAK,MAAM;AACP,WAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,cAAM;;AAAA,AAEV,SAAK,OAAO;AACR,WAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,cAAM;;AAAA,AAEV,SAAK,KAAK;AACN,gBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,8BAA8B,EAAE,KAAK,CAAC,CAAC;AACzD,WAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,cAAM;;AAAA,AAEV,SAAK,SAAS;AACV,WAAG,CAAC,OAAO,EAAE,CAAC;AACd,cAAM;;AAAA,AAEV,SAAK,SAAS;AACV,WAAG,CAAC,OAAO,EAAE,CAAC;AACd,cAAM;;AAAA,AAEV;;AAEI,YAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACnB,eAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,kBAAM;SACT;;AAED,YAAI,EAAE,CAAC;;AAAA;;;;AAEd,AAID,SAAS,QAAQ,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE;AAC5C,QAAI,UAAU,EAAE;AACZ,eAAO;KACV;AACD,OAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClB,QAAI,OAAO,EAAE;AACT,YAAI,CAAC,OAAO,CAAC,CAAC;KACjB;AACD,WAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACnB;;AAED,SAAS,IAAI,CAAC,GAAG,EAAE;;AAEf,QAAI,QAAQ,GAAG;;;;;;;;;;;AAWf;AACI,YAAI,EAAE,MAAM;AACZ,aAAK,EAAE,kBAAkB;AACzB,mBAAW,EAAE,yBAAyB;KACzC,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAuBH,QAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,QAAI,CAAC,GAAG,EAAE;AACN,cAAM,IAAI,IAAI,CAAC;AACf,cAAM,IAAI,CAAC,CAAC,WAAW,GAAG,mCAAmC,CAAC;AAC9D,cAAM,IAAI,IAAI,CAAC;KAClB;;AAED,UAAM,IAAI,IAAI,CAAC;AACf,UAAM,IAAI,QAAQ,CAAC;AACnB,UAAM,IAAI,IAAI,CAAC;;AAEf,KAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,OAAO,EAAE;AAChC,YAAI,CAAC,GAAG,IAAI,GAAG,KAAK,OAAO,CAAC,IAAI,EAAE;AAC9B,gBAAI,OAAO,GAAG,EAAE,CAAC;AACjB,mBAAO,IAAI,IAAI,CAAC;AAChB,mBAAO,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;AACtC,mBAAO,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;;AAE/C,kBAAM,IAAI,OAAO,CAAC;SACrB;KACJ,CAAC,CAAC;;AAEH,OAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACpB","file":"cli-compiled.js","sourcesContent":["//cli.js\n/**\n * Created by David Breuer on 15/12/15.\n *\n * @file cli.js\n * @description\n *\n */\n'use strict';\n\nvar _ = require('lodash');\n\nvar C = require('./constants');\nvar run = require('./run');\nvar log = require('./log');\nvar UserError = require('./error/UserError');\n\n////////\n\n// handler for all unhandled errors\n// might be a UserError, format it accordingly\n\nprocess.on('uncaughtException', function (err) {\n    if (err instanceof UserError) {\n        log.pref(err.userMessage);\n    } else {\n        console.log(err.message);\n    }\n    if (err.stack) {\n        console.log(err.stack);\n    }\n});\n\n// inquirer may not work with some Windows terminal wrappers\n// better show user friendly message about it\n// https://github.com/SBoudrias/Inquirer.js/issues/272\nif (!process.stdout.isTTY) {\n    throw new UserError('The type of the terminal you use is not supported (not tty).');\n}\n\n// read user input\n\nvar args = process.argv.slice(2);\nvar command = args[0];\n\nswitch (command) {\n\n    case 'create':\n        validate(args[1], 'Missing path to output file.', 'create');\n        run.create(args[1]);\n        break;\n\n    case 'init':\n        run.init(args[1]);\n        break;\n\n    case 'clone':\n        run.clone(args[1]);\n        break;\n\n    case 'use':\n        validate(args[1], 'Missing path to config file.', 'use');\n        run.use(args[1]);\n        break;\n\n    case 'default':\n        run.default();\n        break;\n\n    case 'current':\n        run.current();\n        break;\n\n    default:\n\n        if (args.length === 2) {\n            run.parse(args[0], args[1]);\n            break;\n        }\n\n        help();\n\n}\n\n////////\n\nfunction validate(expression, message, command) {\n    if (expression) {\n        return;\n    }\n    log.pref(message);\n    if (command) {\n        help(command);\n    }\n    process.exit(0);\n}\n\nfunction help(one) {\n\n    var commands = [\n    //{\n    //    name: 'parse',\n    //    usage: 'SOURCE DEST',\n    //    description: 'Create a test by parsing existing AngularJS source file.'\n    //},\n    //{\n    //    name: 'create',\n    //    usage: 'create DEST',\n    //    description: 'Create a test by manually entering details.'\n    //},\n    {\n        name: 'init',\n        usage: 'init [DIRECTORY]',\n        description: 'Initialize config file.'\n    }];\n\n    //{\n    //    name: 'clone',\n    //    usage: 'clone [DIRECTORY]',\n    //    description: 'Copy default config and templates to a folder.'\n    //},\n    //{\n    //    name: 'use',\n    //    usage: 'use CONFIG',\n    //    description: 'Use destination config and templates.'\n    //},\n    //{\n    //    name: 'default',\n    //    usage: 'default',\n    //    description: 'Use default config and templates.'\n    //},\n    //{\n    //    name: 'current',\n    //    usage: 'current',\n    //    description: 'Show path of currently used config.'\n    //},\n\n    var output = '';\n\n    if (!one) {\n        output += '\\n';\n        output += C.MODULE_NAME + ' - AngularJS unit test generator.';\n        output += '\\n';\n    }\n\n    output += '\\n';\n    output += 'Usage:';\n    output += '\\n';\n\n    _.each(commands, function (command) {\n        if (!one || one === command.name) {\n            var message = '';\n            message += '\\n';\n            message += ' ' + command.usage + '\\n';\n            message += '    ' + command.description + '\\n';\n\n            output += message;\n        }\n    });\n\n    log.info(output);\n}\n"]}