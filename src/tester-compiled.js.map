{"version":3,"sources":["tester.js"],"names":[],"mappings":"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","file":"tester-compiled.js","sourcesContent":["/**\n * Created by dbreuer83 on 13/11/15.\n */\n'use strict';\n\nimport _ from \"lodash\";\nimport gutil from \"gulp-util\";\nimport through from \"through2\";\nimport fs from \"fs\";\nimport testHelper from \"./src/helper.js\";\n\n// Consts\nconst PLUGIN_ERROR = gutil.PluginError;\n\nconst PLUGIN_NAME = 'episto';\n\nclass EPISTO {\n    constructor(options, files) {\n        this.options = options;\n        this.files = files;\n    };\n\n    init() {\n        let testObject = {};\n\n        var walk = function (dir, regExcludes, done) {\n            var results = [];\n\n            fs.readdir(dir, function (err, list) {\n                if (err) return done(err);\n\n                var pending = list.length;\n                if (!pending) return done(null, results);\n\n                list.forEach(function (file) {\n                    file = path.join(dir, file);\n\n                    var excluded = false;\n                    var len = regExcludes.length;\n                    var i = 0;\n\n                    for (; i < len; i++) {\n                        if (file.match(regExcludes[i])) {\n                            excluded = true;\n                        }\n                    }\n\n                    // Add if not in regExcludes\n                    if(excluded === false) {\n                        results.push(file);\n\n                        // Check if its a folder\n                        fs.stat(file, function (err, stat) {\n                            if (stat && stat.isDirectory()) {\n\n                                // If it is, walk again\n                                walk(file, regExcludes, function (err, res) {\n                                    results = results.concat(res);\n\n                                    if (!--pending) { done(null, results); }\n\n                                });\n                            } else {\n                                if (!--pending) { done(null, results); }\n                            }\n                        });\n                    } else {\n                        if (!--pending) { done(null, results); }\n                    }\n                });\n            });\n        };\n\n        var execludeTestFilePatterns = ['compiled', 'spec', 'test'];\n\n        var regExcludes = [/index\\.html/, /js\\/lib\\.js/, /node_modules/];\n\n        walk('./' + options.cwd, regExcludes, function(err, results) {\n            if (err) {\n                throw err;\n            }\n            var filtered = results.filter( function(file){\n                //execlude array\n                var e = execludeTestFilePatterns.length;\n                while(e--) {\n                    var reg = new RegExp(execludeTestFilePatterns[e]+'.js$', 'gi');\n                    if (reg.test(file)) {\n                        return false;\n                    }\n                }\n                return /\\.js$/ig.test(file);\n            });\n\n\n\n        });\n\n\n        through.obj(function (file, enc, cb) {\n\n            //options.testFileSuffix = new Buffer(options.testFileSuffix);\n\n\n            if (file.isNull()) {\n                return cb(null, file);\n            }\n            if (file.isStream()) {\n                this.emit('error', new PluginError(PLUGIN_NAME, 'Streams are not supported!'));\n                return cb();\n            }\n            if (file.isBuffer()) {\n\n\n                if (!testHelper.isAngular(file)) {\n                    console.log('Skipped:', 'not angular file', \"File not created\");\n                    return cb();\n                }\n\n                if (testHelper.hasTest(file)) {\n                    console.log('Skipped:', 'has test file', \"File not created\");\n                    return cb();\n                }\n\n                console.log(file.path);\n\n\n\n                // Comments match regexp\n                // patternForComments= /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg\n                /**\n                 * module type regex\n                 * @type {RegExp}\n                 */\n\n\n                let match = testHelper.getAllProviders(file.contents);\n                let matchFunctions = testHelper.getAllFunctions(file.contents);\n                let matchServices;\n\n\n                let opt = {\n                    date: new Date(),\n                    type: null,\n                    typeName: null,\n                    module: opts.projectPrefix + '.' + testHelper.truncateJsSuffix(_(file.path.split('/')).last()),\n                    dependency: null,\n                    directiveName: null,\n                    path: file.path,\n                    filename: _(file.path.split('/')).last(),\n                    amdPath: 'namm',\n                    name: testHelper.truncateJsSuffix(_(file.path.split('/')).last()),\n                    capitalizedName: testHelper.capitalize(testHelper.truncateJsSuffix(_(file.path.split('/')).last()))\n                };\n                console.log(match[0]);\n                if (match) {\n                    opt.type = match[1];\n                    opt.typeName = match[2];\n                    matchServices = testHelper.getAllServices();\n                }\n\n\n                if (opt.type === 'directive') {\n                    opt.directiveName = testHelper.dasherize(opt.typeName);\n                }\n\n                if (matchFunctions !== null) {\n                    opt.funcObj = matchFunctions;\n                }\n\n                if (opt.type === 'service'||'factory') {\n                    opt.services = matchServices;\n                }\n\n                opt.caches = testHelper.getAllCache(file.contents);\n                /**\n                 *\n                 * @type {{functions: *}}\n                 */\n                testObject = {\n                    module: testHelper.getAllModules(file.contents),\n                    dependency: testHelper.getAllModuleDependency(file.contents),\n                    providers: testHelper.getAllProviders(file.contents),\n                    functions: testHelper.getAllFunctions(file.contents),\n                    cache: testHelper.getAllCache(file.contents),\n                    services: testHelper.getAllServices(file.contents)\n                };\n\n                fs.writeFile('message.json', JSON.stringify(testObject), 'utf8', function(response){\n                    console.log(\"Test file: \", response)\n                });\n                let templateFile = (opt.type === void 0) ? 'angular.' + opt.type + '.temp' : 'angular.module.temp';\n                let fileContent = String(fs.readFileSync(__dirname + \"/templates/\" + templateFile, \"utf8\"));\n\n                let compiled = _.template(fileContent);\n\n                file.contents = new Buffer(compiled(opt));\n\n                file.path = testHelper.replaceExtension(file.path, '.spec.js'); // file.js\n                console.log('Created test files: ', _(file.path.split('/')).last());\n            }\n\n\n            cb(null, file);\n            //cb(null);\n\n\n\n\n        });\n\n\n    }\n}\n\n\nmodule.exports = new EPISTO();\n"]}