{"version":3,"sources":["ask.js"],"names":[],"mappings":"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","file":"ask-compiled.js","sourcesContent":["//ask.js\n/**\n * Created by David Breuer on 15/12/15.\n *\n * @file ask.js\n * @description\n *\n */\n\n'use strict';\n\nvar inquirer = require('inquirer');\nvar _ = require('lodash');\n\nvar config = require('./config');\n\n////////\n\nvar ask = module.exports = {};\n\n////////\n\nask.createUnit = function (callback) {\n    var questions = [{\n        type: 'list',\n        name: 'type',\n        message: 'Unit type:',\n        choices: config.units.process\n    }, {\n        type: 'input',\n        name: 'name',\n        message: 'Unit name:',\n        validate: required\n    }, {\n        type: 'input',\n        name: 'module',\n        message: 'Module name:',\n        validate: required\n    }];\n\n    inquirer.prompt(questions, function (answers) {\n\n        var unit = {\n            name: answers.name,\n            type: answers.type,\n            module: { name: answers.module },\n            deps: []\n        };\n\n        // unit.deps will be populated by reference\n        addUnitDependency(unit.deps, function () {\n            callback(unit);\n        });\n    });\n};\n\nask.pickUnit = function (units, callback) {\n    if (units.length === 1) {\n        return callback(_.first(units));\n    }\n\n    var question = {\n        type: 'list',\n        name: 'unit',\n        message: 'What unit do you want to test?',\n        choices: function choices() {\n            return units.map(function (unit, index) {\n                return {\n                    name: [_.capitalize(unit.type), '\"' + unit.name + '\"', 'from module', '\"' + unit.module.name + '\"'].join(' '),\n                    value: index\n                };\n            });\n        }\n    };\n\n    inquirer.prompt(question, function (answer) {\n        var unit = units[answer.unit];\n        callback(unit);\n    });\n};\n\nask.identifyDeps = function (deps, callback) {\n\n    if (!config.dependencies.process.length) {\n        return callback([]);\n    }\n\n    var questions = deps.map(function (dep, index) {\n        return {\n            type: 'list',\n            name: index.toString(),\n            message: 'What is a type of \"' + dep.name + '\"?',\n            choices: config.dependencies.process\n        };\n    });\n\n    inquirer.prompt(questions, function (answers) {\n\n        var identified = _.map(answers, function (type, index) {\n            var dep = deps[index];\n            dep.type = type;\n            return dep;\n        });\n\n        callback(identified);\n    });\n};\n\n////////\n\nfunction addUnitDependency(deps, callback) {\n\n    if (!config.dependencies.process.length) {\n        return callback();\n    }\n\n    var questions = [{\n        type: 'input',\n        name: 'name',\n        message: 'Dependency name (\"Enter\" to skip): '\n    }, {\n        type: 'list',\n        name: 'type',\n        message: 'Dependency type:',\n        choices: config.dependencies.process,\n        when: function when(answers) {\n            return !isEmptyString(answers.name);\n        }\n    }];\n\n    inquirer.prompt(questions, function (answers) {\n\n        // if user types in empty name - finish adding deps\n        if (isEmptyString(answers.name)) {\n            return callback();\n        }\n\n        var dep = {\n            name: answers.name,\n            type: answers.type\n        };\n\n        deps.push(dep);\n\n        // recursive, pass deps array along the way until everything resolves\n        addUnitDependency(deps, callback);\n    });\n}\n\nfunction required(input) {\n    if (isEmptyString(input)) {\n        return 'Value is required';\n    }\n    return true;\n}\n\nfunction isEmptyString(string) {\n    return _.isEmpty(_.trim(string));\n}\n"]}